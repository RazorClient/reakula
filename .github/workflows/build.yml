name: Reakula CI

# Restrict events to only run on master/stable, plus PR events to master/stable.
on:
  push:
    branches:
      - master
      - stable
  pull_request:
    branches:
      - unstable
      - master
    types: [opened, synchronize, reopened, review_requested, ready_for_review]

# Minimal permissions required for checking PR approvals
permissions:
  contents: read
  pull-requests: read

jobs:
  # 1) Check if the PR has at least one approved review
  check_approvals:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    outputs:
      approved: ${{ steps.pr-approval.outputs.approved }}
    steps:
      - name: Check PR approvals with github-script
        id: pr-approval
        uses: actions/github-script@v6
        with:
          script: |
            const { data: reviews } = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
            });
            const approvedReviews = reviews.filter(r => r.state === 'APPROVED').length;
            if (approvedReviews > 0) {
              core.setOutput('approved', 'true');
            } else {
              core.setOutput('approved', 'false');
            }

  # 2) Linux Builds
  linux-builds:
    needs: check_approvals
    if: github.ref_name == 'master' || github.ref_name == 'stable' || needs.check_approvals.outputs.approved == 'true'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [x86_64-unknown-linux-gnu, aarch64-unknown-linux-gnu]
    steps:
      - uses: actions/checkout@v4

      # Cache cargo registry
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-registry-

      # Cache cargo index
      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-git-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-git-

      # Cache build artifacts (target folder)
      - name: Cache build target directory
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-target-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-target-${{ matrix.target }}-

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Install cross-compilation dependencies
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --target ${{ matrix.target }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: linux-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/

  # 3) macOS Builds
  macos-builds:
    needs: check_approvals
    if: github.ref_name == 'master' || github.ref_name == 'stable' || needs.check_approvals.outputs.approved == 'true'
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        target: [x86_64-apple-darwin, aarch64-apple-darwin]
    steps:
      - uses: actions/checkout@v4

      # Cache cargo registry
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-registry-

      # Cache cargo index
      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-git-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-git-

      # Cache build artifacts (target folder)
      - name: Cache build target directory
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-target-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-target-${{ matrix.target }}-

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --target ${{ matrix.target }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: macos-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/

  # 4) Windows Builds
  windows-builds:
    needs: check_approvals
    if: github.ref_name == 'master' || github.ref_name == 'stable' || needs.check_approvals.outputs.approved == 'true'
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        target: [x86_64-pc-windows-msvc]
    steps:
      - uses: actions/checkout@v4

      # Cache cargo registry
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-registry-

      # Cache cargo index
      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-git-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-git-

      # Cache build artifacts (target folder)
      - name: Cache build target directory
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-target-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-target-${{ matrix.target }}-

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --target ${{ matrix.target }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: windows-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/
